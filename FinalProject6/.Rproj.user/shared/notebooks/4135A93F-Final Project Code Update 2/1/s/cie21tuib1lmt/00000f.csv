"0","bootstrapping <- function(x, y, data, alpha = 0.05, B = 20) {"
"0",""
"0","  ## Format user data"
"0","  list1 <- format_input(x, y, data)"
"0","  x <- list1$x"
"0","  y <- list1$y"
"0",""
"0","  # Determine Initial Beta Coefficients"
"0","  beta_initial_guess2 <- function(x, y){"
"0","    xx <- t(x)%*%x"
"0","    # Check for singularity"
"0","    if (det(xx) == 0) stop(""Matrix X'X is singular and cannot be inverted."")"
"0","    xx <- solve(xx)"
"0","    return(xx %*% t(x) %*% y)"
"0","  }"
"0",""
"0","  ## Create matrices to store the results"
"0","  beta_bootstrap_estimates <- matrix(NA, nrow = B, ncol = ncol(x)) # Store optimized coefficients"
"0","  beta_bootstrap_initial <- matrix(NA, nrow = B, ncol = ncol(x))  # Store initial guesses"
"0","  n <- nrow(data)"
"0",""
"0","  ## Perform bootstrapping"
"0","  for (i in 1:B) {"
"0","    # Resample data"
"0","    index <- sample(1:n, size = n, replace = TRUE)"
"0","    x_boot <- x[index, , drop = FALSE]"
"0","    y_boot <- y[index]"
"0",""
"0","    # Calculate initial beta for resampled data"
"0","    beta_boot <- beta_initial_guess2(x = x_boot, y = y_boot)"
"0","    beta_bootstrap_initial[i, ] <- beta_boot"
"0",""
"0","    # Optimize to find ""optimal"" beta"
"0","    boot_optim <- optim(par = beta_boot,"
"0","                        fn = loss_function,"
"0","                        x = x_boot,"
"0","                        y = y_boot,"
"0","                        method = ""BFGS"")"
"0","    beta_bootstrap_estimates[i, ] <- boot_optim$par"
"0","  }"
"0",""
"0","  ## Compute Confidence Intervals (Percentile Method)"
"0","  lower_bound <- apply(beta_bootstrap_estimates, 2, function(est) quantile(est, probs = alpha / 2))"
"0","  upper_bound <- apply(beta_bootstrap_estimates, 2, function(est) quantile(est, probs = 1 - alpha / 2))"
"0","  estimate <- colMeans(beta_bootstrap_estimates) # Average bootstrap estimates"
"0",""
"0","  ## Combine Results into Lists"
"0","  coefficients_mat <- list("
"0","    Beta_Bootstrap_Estimates = beta_bootstrap_estimates,"
"0","    Beta_Bootstrap_Initial = beta_bootstrap_initial"
"0","  )"
"0",""
"0","  confidence_intervals_mat<- rbind("
"0","    Lower = lower_bound,"
"0","    Estimate = estimate,"
"0","    Upper = upper_bound"
"0","  )"
"0","  colnames(confidence_intervals_mat) <- colnames(x)"
"0",""
"0","  ## Output"
"0","  result <- list("
"0","    Coefficients = coefficients_mat,"
"0","    ConfidenceIntervals = confidence_intervals_mat"
"0","  )"
"0",""
"0","  print(confidence_intervals_mat)"
"0","  return(result)"
"0","}"
"0",""
